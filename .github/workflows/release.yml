name: Release Build

on:
  push:
    tags:
      - 'v*.*.*'

env:
  NODE_OPTIONS: "--max-old-space-size=4096"

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        build:
          - name: 'yanta'
            platform: 'linux/amd64'
            os: 'ubuntu-latest'
          - name: 'yanta'
            platform: 'windows/amd64'
            os: 'windows-latest'
          - name: 'yanta'
            platform: 'darwin/universal'
            os: 'macos-latest'

    runs-on: ${{ matrix.build.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Linux dependencies
        if: matrix.build.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            libwebkit2gtk-4.1-dev \
            build-essential \
            pkg-config \
            libayatana-appindicator3-dev

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install Wails
        run: go install github.com/wailsapp/wails/v2/cmd/wails@v2.10.2

      - name: Install frontend dependencies
        working-directory: frontend
        run: npm ci

      - name: Build for Linux
        if: matrix.build.platform == 'linux/amd64'
        run: wails build -platform linux/amd64 -o yanta-linux-amd64 -clean -tags webkit2_41

      - name: Build for Windows (Portable)
        if: matrix.build.platform == 'windows/amd64'
        run: wails build -platform windows/amd64 -o yanta-windows-portable.exe -webview2 download -clean

      - name: Build for Windows (Installer)
        if: matrix.build.platform == 'windows/amd64'
        run: wails build -platform windows/amd64 -o yanta-windows-installer.exe -nsis -webview2 download

      - name: Build for macOS
        if: matrix.build.platform == 'darwin/universal'
        run: wails build -platform darwin/universal -o yanta-darwin-universal -clean

      - name: Set artifact name
        id: artifact-name
        shell: bash
        run: |
          PLATFORM="${{ matrix.build.platform }}"
          ARTIFACT_NAME="${{ matrix.build.name }}-${PLATFORM//\//-}"
          echo "name=$ARTIFACT_NAME" >> $GITHUB_OUTPUT

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.artifact-name.outputs.name }}
          path: |
            ./build/bin/*
          retention-days: 7

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Display structure of downloaded files
        run: ls -R ./artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ./artifacts/**/*
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
